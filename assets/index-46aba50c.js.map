{"version":3,"file":"index-46aba50c.js","sources":["../../../src/components/molecules/Switch/index.tsx"],"sourcesContent":["import { Label } from '@components/atoms';\nimport type { LabelWithInputProps } from '@components/atoms';\nimport { useSubscribedState } from '@hooks';\n\nimport styles from './index.module.scss';\n\nexport interface SwitchProps extends LabelWithInputProps {\n  value?: boolean;\n  onChange?: (checked: boolean) => void;\n  disabled?: boolean;\n  id?: string;\n  inputStyle?: {\n    size?: 'small' | 'medium' | 'large';\n    width?: CSSStyleDeclaration['width'];\n    containerSize?: 'none' | 'small' | 'medium' | 'large';\n  };\n}\n\nexport const Switch = ({\n  value = false,\n  onChange,\n  disabled,\n  id,\n  label,\n  className,\n  labelStyle,\n  inputStyle,\n}: SwitchProps) => {\n  const [turned, setTurned] = useSubscribedState(value);\n\n  const sizeClassName = styles[`size-${inputStyle?.size ?? 'medium'}`];\n  const turnedClassName = turned ? styles.on : styles.off;\n\n  return (\n    <Label.WithInput\n      inputStyle={{\n        size: inputStyle?.containerSize,\n      }}\n      label={label}\n      labelStyle={labelStyle}\n      className={className}\n    >\n      <div\n        style={{\n          width: inputStyle?.width,\n        }}\n        className={`${styles['switch-container']} ${\n          styles[\n            `container-size-${\n              inputStyle?.containerSize ?? labelStyle?.direction === 'row'\n                ? inputStyle?.containerSize ?? 'large'\n                : 'none'\n            }`\n          ]\n        }`}\n      >\n        <div\n          className={`${styles['switch-content']} ${sizeClassName} ${turnedClassName}`}\n        >\n          <div\n            className={`${styles['switch-ball']} ${sizeClassName} ${turnedClassName}`}\n          />\n          <input\n            id={id}\n            type=\"checkbox\"\n            className={styles['switch-input']}\n            name={label}\n            checked={turned}\n            disabled={disabled}\n            onChange={({ target: { checked } }) => {\n              setTurned?.(checked);\n              onChange?.(checked);\n            }}\n          />\n        </div>\n      </div>\n    </Label.WithInput>\n  );\n};\n"],"names":["Switch","value","onChange","disabled","id","label","className","labelStyle","inputStyle","turned","setTurned","useSubscribedState","sizeClassName","styles","turnedClassName","jsx","Label","jsxs","checked"],"mappings":"umDAkBOA,EAAA,CAAA,CAAgB,MAAAC,EAAA,GACb,SAAAC,EACR,SAAAC,EACA,GAAAC,EACA,MAAAC,EACA,UAAAC,EACA,WAAAC,EACA,WAAAC,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAAV,CAAA,EAEAW,EAAAC,EAAA,SAAAL,GAAA,YAAAA,EAAA,OAAA,QAAA,EAAA,EACAM,EAAAL,EAAAI,EAAA,GAAAA,EAAA,IAEA,OAAAE,EAAA,IACEC,EAAA,UAAO,CAAN,WAAA,CACa,KAAAR,GAAA,YAAAA,EAAA,aACQ,EACpB,MAAAH,EACA,WAAAE,EACA,UAAAD,EACA,SAAAS,EAAA,IAEA,MAAC,CAAA,MAAA,CACQ,MAAAP,GAAA,YAAAA,EAAA,KACc,EACrB,UAAA,GAAAK,EAAA,kBAAA,CAAA,IAAAA,EAAA,mBAAAL,GAAA,YAAAA,EAAA,iBAAAD,GAAA,YAAAA,EAAA,aAAA,OAAAC,GAAA,YAAAA,EAAA,gBAAA,QAAA,MAAA,EAAA,CAAA,GASA,SAAAS,EAAA,KAEA,MAAC,CAAA,UAAA,GAAAJ,EAAA,gBAAA,CAAA,IAAAD,CAAA,IAAAE,CAAA,GAC2E,SAAA,CAE1EC,EAAA,IAAA,MAAC,CAAA,UAAA,GAAAF,EAAA,aAAA,CAAA,IAAAD,CAAA,IAAAE,CAAA,EACwE,CAAA,EACzEC,EAAA,IACA,QAAC,CAAA,GAAAX,EACC,KAAA,WACK,UAAAS,EAAA,cAAA,EAC2B,KAAAR,EAC1B,QAAAI,EACG,SAAAN,EACT,SAAA,CAAA,CAAA,OAAA,CAAA,QAAAe,CAAA,CAAA,IAAA,CAEER,GAAA,MAAAA,EAAAQ,GACAhB,GAAA,MAAAA,EAAAgB,EAAkB,CACpB,CAAA,CACF,CAAA,CAAA,CACF,CAAA,CACF,CAAA,CAGN"}