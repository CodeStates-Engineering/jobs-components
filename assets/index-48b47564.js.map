{"version":3,"file":"index-48b47564.js","sources":["../../../src/components/molecules/FloatingModal/index.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\nimport { createContext, useState } from 'react';\n\nimport type { FocusLayerProps } from '@components/atoms';\nimport { useMountedEffect } from '@hooks';\nimport { cleanClassName } from '@utils';\n\nimport styles from './index.module.scss';\n\ninterface CommonProps {\n  children?: ReactNode;\n  className?: string;\n}\n\nexport interface FloatingModalProps\n  extends CommonProps,\n    Pick<\n      React.DetailedHTMLProps<\n        React.FormHTMLAttributes<HTMLFormElement>,\n        HTMLFormElement\n      >,\n      'onSubmit'\n    >,\n    Pick<FocusLayerProps, 'priority'> {\n  opened?: boolean;\n  onClose?: () => void;\n}\n\nconst FloatingModalContext = createContext<(() => void) | undefined>(undefined);\nconst FloatingModalBody = ({ children, className }: CommonProps) => (\n  <section\n    className={cleanClassName(`${styles['floating-modal-items']} ${className}`)}\n  >\n    {children}\n  </section>\n);\n\ninterface FloatingModalTailProps {\n  children: ReactNode;\n  className?: string;\n  border?: boolean;\n}\nconst FloatingModalTail = ({\n  children,\n  className,\n  border = true,\n}: FloatingModalTailProps) => (\n  <div\n    className={`${styles['floating-modal-tail']} ${\n      border && styles['with-border']\n    } ${className}`}\n  >\n    {children}\n  </div>\n);\n\nconst FloatingModalMain = ({\n  children,\n  className,\n  opened,\n  onClose,\n  priority = 3,\n}: FloatingModalProps) => {\n  const [floatState, setFloatState] = useState<'open' | 'closing' | 'closed'>(\n    'closed',\n  );\n\n  const commonProps = {\n    className: cleanClassName(\n      `${styles[`floating-modal-container`]} ${styles[floatState]} ${\n        styles[`priority-${priority}`]\n      } ${className}`,\n    ),\n    children: (\n      <FloatingModalContext.Provider value={onClose}>\n        {children}\n      </FloatingModalContext.Provider>\n    ),\n  };\n\n  useMountedEffect(() => {\n    if (opened) {\n      setFloatState('open');\n    } else {\n      setFloatState('closing');\n      const delayClose = setTimeout(() => setFloatState('closed'), 500);\n      return () => clearTimeout(delayClose);\n    }\n  }, [opened]);\n\n  return (\n    <>\n      {floatState === 'closed' ? null : <FloatingModalBody {...commonProps} />}\n    </>\n  );\n};\n\nexport const FloatingModal = Object.assign(FloatingModalMain, {\n  Body: FloatingModalBody,\n  Tail: FloatingModalTail,\n});\n"],"names":["FloatingModalContext","createContext","FloatingModalBody","children","className","jsx","cleanClassName","styles","FloatingModalTail","border","FloatingModalMain","opened","onClose","priority","floatState","setFloatState","useState","commonProps","useMountedEffect","delayClose","Fragment","FloatingModal"],"mappings":"uwCA4BAA,EAAAC,EAAAA,cAAA,MAAA,EACAC,EAAA,CAAA,CAAA,SAAAC,EAAA,UAAAC,CAAA,IAAAC,EAAA,IACE,UAAC,CAAA,UAAAC,EAAA,GAAAC,EAAA,sBAAA,CAAA,IAAAH,CAAA,EAAA,EAC2E,SAAAD,CAEzE,CACH,EAQFK,EAAA,CAAA,CAA2B,SAAAL,EACzB,UAAAC,EACA,OAAAK,EAAA,EAEF,IAAAJ,EAAA,IACE,MAAC,CAAA,UAAA,GAAAE,EAAA,qBAAA,CAAA,IAAAE,GAAAF,EAAA,aAAA,CAAA,IAAAH,CAAA,GAGc,SAAAD,CAEZ,CACH,EAGFO,EAAA,CAAA,CAA2B,SAAAP,EACzB,UAAAC,EACA,OAAAO,EACA,QAAAC,EACA,SAAAC,EAAA,CAEF,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAoC,QAClC,EAGFC,EAAA,CAAoB,UAAAX,EACP,GAAAC,EAAA,0BAAA,CAAA,IAAAA,EAAAO,CAAA,CAAA,IAAAP,EAAA,YAAAM,CAAA,EAAA,CAAA,IAAAT,CAAA,EAGI,EACf,SAAAC,EAAA,IAAAL,EAAA,SAAA,CAAA,MAAAY,EAAA,SAAAT,EAAA,CAIE,EAIJ,OAAAe,EAAA,IAAA,CACE,GAAAP,EACEI,EAAA,MAAA,MAAoB,CAEpBA,EAAA,SAAA,EACA,MAAAI,EAAA,WAAA,IAAAJ,EAAA,QAAA,EAAA,GAAA,EACA,MAAA,IAAA,aAAAI,CAAA,CAAoC,CACtC,EAAA,CAAAR,CAAA,CAAA,EAGFN,EAAA,IAAAe,EAAA,SAAA,CAAA,SAAAN,IAAA,SAAA,KAAAT,EAAAA,IAAAH,EAAA,CAAA,GAAAe,CAAA,CAAA,CAAA,CAAA,CAKF,EAEOI,EAAA,OAAA,OAAAX,EAAA,CAAuD,KAAAR,EACtD,KAAAM,CAER,CAAA"}