{"version":3,"file":"index-1fa4b92a.js","sources":["../../../node_modules/.pnpm/react-feather@2.0.10_react@18.2.0/node_modules/react-feather/dist/icons/check.js","../../../src/components/atoms/Options/index.tsx"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Check = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"20 6 9 17 4 12\"\n  }));\n});\nCheck.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nCheck.displayName = 'Check';\nexport default Check;","import { useState, useEffect, useRef, useMemo } from 'react';\nimport { Check } from 'react-feather';\n\nimport { useTypographyClassName } from '@hooks';\nimport type { UseTypographyClassNameParams } from '@hooks';\nimport { cleanClassName } from '@utils';\n\nimport styles from './index.module.scss';\n\nexport type ValidOptionValue = string | number;\n\nexport interface OptionsProps<\n  OptionValue = ValidOptionValue,\n  Multiple = boolean,\n> {\n  opened?: boolean;\n  options?: {\n    label: string;\n    value: OptionValue;\n  }[];\n  multiple?: Multiple;\n  value?: Multiple extends true ? OptionValue[] : OptionValue;\n  onChange?: (\n    value?: Multiple extends true ? OptionValue[] : OptionValue,\n  ) => void;\n  onKeyDown?: (event: KeyboardEvent) => void;\n  float?: 'top' | 'bottom';\n  className?: string;\n  optionStyle?: UseTypographyClassNameParams &\n    Pick<React.CSSProperties, 'width' | 'maxHeight'>;\n  cancelable?: boolean;\n  textEllipsis?: boolean;\n}\n\nexport const Options = <\n  OptionValue extends ValidOptionValue,\n  Multiple extends boolean = false,\n>({\n  opened = false,\n  options,\n  multiple = false as Multiple,\n  value: selectedValue,\n  onChange,\n  onKeyDown,\n  float = 'bottom',\n  className,\n  optionStyle,\n  cancelable = true,\n  textEllipsis = false,\n}: OptionsProps<OptionValue, Multiple>) => {\n  const [openState, setOpenState] = useState<boolean | 'closing' | 'opening'>(\n    opened,\n  );\n\n  useEffect(() => {\n    setOpenState((prevOpenState) => {\n      if (prevOpenState !== opened) {\n        return opened ? 'opening' : 'closing';\n      }\n      return prevOpenState;\n    });\n  }, [opened]);\n\n  const isChangeOpenState = typeof openState === 'string';\n  const [indexForSelect, setIndexForSelect] = useState(-1);\n\n  const [optionsStyle, optionContainerStyle] = useMemo(\n    () => [\n      { width: optionStyle?.width },\n      {\n        maxHeight: optionStyle?.maxHeight,\n      },\n    ],\n    [optionStyle?.maxHeight, optionStyle?.width],\n  );\n\n  useEffect(() => {\n    if (isChangeOpenState) {\n      const nextOpenState = openState === 'opening';\n\n      setIndexForSelect(\n        options?.findIndex(({ value }) => value === selectedValue) ?? -1,\n      );\n\n      const timeout = setTimeout(() => setOpenState(nextOpenState), 250);\n      return () => clearTimeout(timeout);\n    }\n  }, [isChangeOpenState, openState, options, selectedValue]);\n\n  const optionRefs = useRef<(HTMLButtonElement | null)[]>([]);\n\n  useEffect(() => {\n    if (openState === true && options) {\n      const keyboardEvent = (event: KeyboardEvent) => {\n        onKeyDown?.(event);\n        switch (event.key) {\n          case 'ArrowUp':\n            event.preventDefault();\n            return setIndexForSelect((prevIndex) => {\n              if (prevIndex > 0) {\n                const nextIndex = prevIndex - 1;\n                optionRefs.current[nextIndex]?.focus();\n                return nextIndex;\n              }\n              return prevIndex;\n            });\n\n          case 'ArrowDown':\n            event.preventDefault();\n            return setIndexForSelect((prevIndex) => {\n              if (prevIndex < options.length - 1) {\n                const nextIndex = prevIndex + 1;\n                optionRefs.current[nextIndex]?.focus();\n                return nextIndex;\n              }\n              return prevIndex;\n            });\n          case 'Enter':\n            event.preventDefault();\n            return setIndexForSelect((index) => {\n              if (index >= 0) {\n                optionRefs.current[index]?.click();\n              }\n              return index;\n            });\n          default:\n        }\n      };\n\n      document.addEventListener('keydown', keyboardEvent);\n      return () => document.removeEventListener('keydown', keyboardEvent);\n    }\n  }, [openState, options, onKeyDown]);\n\n  const { typographyClassName } = useTypographyClassName({\n    fontSize: optionStyle?.fontSize,\n    fontWeight: optionStyle?.fontWeight,\n  });\n\n  return openState && options?.length ? (\n    <section\n      style={optionsStyle}\n      className={cleanClassName(\n        `${styles.options} ${styles[float]} ${\n          isChangeOpenState && styles[openState]\n        } ${className}`,\n      )}\n    >\n      <ul\n        className={cleanClassName(styles['option-container'])}\n        style={optionContainerStyle}\n      >\n        {options?.map(({ label, value }, index) => {\n          const isHovered = index === indexForSelect;\n          const isSelected = (() => {\n            if (selectedValue === undefined) {\n              return false;\n            }\n\n            if (multiple && selectedValue instanceof Array) {\n              return selectedValue.includes(value);\n            }\n\n            return selectedValue === value;\n          })();\n\n          return (\n            <li key={index} className={styles['option-wrap']}>\n              <button\n                type=\"button\"\n                ref={(element) => {\n                  optionRefs.current[index] = element;\n                }}\n                className={cleanClassName(\n                  `${styles['option-item']} ${typographyClassName} ${\n                    isHovered && styles.hovered\n                  } ${isSelected && styles.selected}`,\n                )}\n                onClick={() => {\n                  if (multiple) {\n                    const selectedValues = (selectedValue ??\n                      []) as OptionValue[];\n\n                    const handleChange = onChange as\n                      | ((values: OptionValue[]) => void)\n                      | undefined;\n\n                    let newValues = selectedValues;\n\n                    if (!isSelected) {\n                      newValues = [...selectedValues, value];\n                    } else if (cancelable) {\n                      newValues = selectedValues.filter(\n                        (selectedValue) => selectedValue !== value,\n                      );\n                    }\n\n                    handleChange?.(newValues);\n                  } else {\n                    const handleChange = onChange as\n                      | ((value?: OptionValue) => void)\n                      | undefined;\n\n                    handleChange?.(\n                      isSelected && cancelable ? undefined : value,\n                    );\n                  }\n                }}\n                onMouseEnter={() => {\n                  setIndexForSelect(index);\n                }}\n              >\n                <div\n                  className={cleanClassName(\n                    textEllipsis ? `${styles['text-ellipsis']}` : undefined,\n                  )}\n                >\n                  {label}\n                </div>\n                {multiple ? (\n                  <div\n                    className={cleanClassName(\n                      `${styles['icon-wrap']} ${isSelected && styles.show}`,\n                    )}\n                  >\n                    {<Check size=\"1em\" />}\n                  </div>\n                ) : null}\n              </button>\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  ) : (\n    <></>\n  );\n};\n"],"names":["_extends","target","i","source","key","_objectWithoutProperties","excluded","_objectWithoutPropertiesLoose","sourceSymbolKeys","sourceKeys","Check","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","PropTypes","Check$1","Options","opened","options","multiple","selectedValue","onChange","onKeyDown","float","className","optionStyle","cancelable","textEllipsis","openState","setOpenState","useState","useEffect","prevOpenState","isChangeOpenState","indexForSelect","setIndexForSelect","optionsStyle","optionContainerStyle","useMemo","nextOpenState","value","timeout","optionRefs","useRef","keyboardEvent","event","prevIndex","nextIndex","_a","index","typographyClassName","useTypographyClassName","jsx","cleanClassName","styles","label","isHovered","isSelected","jsxs","element","selectedValues","handleChange","newValues","selectedValue2","Fragment"],"mappings":"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","x_google_ignoreList":[0]}