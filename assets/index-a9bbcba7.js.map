{"version":3,"file":"index-a9bbcba7.js","sources":["../../../src/components/molecules/ToastContainer/index.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport styles from './index.module.scss';\nimport { cleanClassName } from '../../../utils';\nimport { Toast, CLOSE_TOAST_ANIMATION_DURATION } from '../../atoms';\n\nimport type { ToastProps } from '../../atoms';\n\nexport interface ToastOption extends Pick<ToastProps, 'type'> {\n  message?: ToastProps['children'];\n}\n\nexport interface ToastContainerProps\n  extends Omit<\n    ToastProps,\n    'maintained' | 'leftSpace' | 'children' | 'onToastDelete' | 'type'\n  > {\n  toastOption?: ToastOption;\n}\n\nexport const ToastContainer = ({\n  toastOption,\n  floatDirection = 'from-top',\n  holdTime = 3000,\n}: ToastContainerProps) => {\n  const [toastInfoList, setToastInfoList] = useState<ToastOption[]>([]);\n\n  const [isSpaceHolding, setIsSpaceHolding] = useState(false);\n\n  useEffect(() => {\n    if (!isSpaceHolding && toastInfoList.length > 0) {\n      const toastPropsListCleanTimer = setTimeout(\n        () => setToastInfoList([]),\n        holdTime + CLOSE_TOAST_ANIMATION_DURATION,\n      );\n\n      return () => clearTimeout(toastPropsListCleanTimer);\n    }\n  }, [isSpaceHolding, holdTime, toastInfoList]);\n\n  useEffect(() => {\n    if (toastOption?.message) {\n      setToastInfoList((prevToastPropsList) => [\n        ...prevToastPropsList,\n        { ...toastOption, deleted: false },\n      ]);\n    }\n  }, [toastOption]);\n\n  return (\n    <div\n      className={cleanClassName(\n        `${styles['toast-container']} ${\n          styles[`float-direction-${floatDirection}`]\n        }`,\n      )}\n    >\n      <div\n        onMouseEnter={() => setIsSpaceHolding(true)}\n        onMouseLeave={() => {\n          setIsSpaceHolding(false);\n        }}\n      >\n        {toastInfoList.map((toastInfo, index) => (\n          <Toast\n            key={index}\n            isSpaceHolding={isSpaceHolding}\n            floatDirection={floatDirection}\n            holdTime={holdTime}\n            type={toastInfo.type}\n          >\n            {toastInfo.message}\n          </Toast>\n        ))}\n      </div>\n    </div>\n  );\n};\n"],"names":["ToastContainer","toastOption","floatDirection","holdTime","toastInfoList","setToastInfoList","useState","isSpaceHolding","setIsSpaceHolding","useEffect","toastPropsListCleanTimer","CLOSE_TOAST_ANIMATION_DURATION","prevToastPropsList","jsx","cleanClassName","styles","toastInfo","index","Toast"],"mappings":"ipCAoBOA,EAAA,CAAA,CAAwB,YAAAC,EAC7B,eAAAC,EAAA,WACiB,SAAAC,EAAA,GAEnB,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,CAAA,CAAA,EAEA,CAAAC,EAAAC,CAAA,EAAAF,EAAA,SAAA,EAAA,EAEAG,OAAAA,EAAAA,UAAA,IAAA,CACE,GAAA,CAAAF,GAAAH,EAAA,OAAA,EAAA,CACE,MAAAM,EAAA,WAAiC,IAAAL,EAAA,CAAA,CAAA,EACNF,EAAAQ,CACd,EAGb,MAAA,IAAA,aAAAD,CAAA,CAAkD,CACpD,EAAA,CAAAH,EAAAJ,EAAAC,CAAA,CAAA,EAGFK,EAAAA,UAAA,IAAA,CACER,GAAA,MAAAA,EAAA,SACEI,EAAAO,GAAA,CAAyC,GAAAA,EACpC,CAAA,GAAAX,EAAA,QAAA,EAAA,CAC8B,CAAA,CAErC,EAAA,CAAAA,CAAA,CAAA,EAGFY,EAAA,IACE,MAAC,CAAA,UAAAC,EACY,GAAAC,EAAA,iBAAA,CAAA,IAAAA,EAAA,mBAAAb,CAAA,EAAA,CAAA,EAGT,EACF,SAAAW,EAAA,IAEA,MAAC,CAAA,aAAA,IAAAL,EAAA,EAAA,EAC2C,aAAA,IAAA,CAExCA,EAAA,EAAA,CAAuB,EACzB,SAAAJ,EAAA,IAAA,CAAAY,EAAAC,IAAAJ,EAAA,IAGEK,EAAC,CAAA,eAAAX,EAEC,eAAAL,EACA,SAAAC,EACA,KAAAa,EAAA,KACgB,SAAAA,EAAA,OAEL,EAAAC,CANN,CAAA,CAQR,CAAA,CACH,CAAA,CAGN"}