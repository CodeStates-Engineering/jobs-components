{"version":3,"file":"index-adcc01c8.js","sources":["../../../src/components/molecules/Tag/index.tsx"],"sourcesContent":["import type { ReactNode, MouseEvent } from 'react';\nimport { useMemo, useState } from 'react';\nimport { X } from 'react-feather';\n\nimport styles from './index.module.scss';\nimport { cleanClassName } from '../../../utils';\nimport { Button } from '../../atoms/Button';\n\nexport interface TagProps extends Pick<React.CSSProperties, 'width'> {\n  color?:\n    | 'green50'\n    | 'purple50'\n    | 'blue50'\n    | 'peach50'\n    | 'orange50'\n    | 'bluish-gray50';\n  size?: '14' | '18' | '26';\n  className?: string;\n  children?: ReactNode;\n  onClose?: (e?: MouseEvent<HTMLButtonElement>) => void;\n  onClick?: () => void;\n}\n\nexport const Tag = ({\n  color = 'green50',\n  size = '18',\n  width,\n  className,\n  children,\n  onClose = undefined,\n  onClick,\n}: TagProps) => {\n  const [display, setDisplay] = useState(true);\n  const style = useMemo(() => ({ width }), [width]);\n\n  return display ? (\n    <div\n      className={cleanClassName(\n        `${styles['tag-container']} ${styles[color.replaceAll('/', '_')]} ${\n          onClick && styles.clickable\n        } ${className}`,\n      )}\n      style={style}\n      onClick={() => onClick?.()}\n    >\n      <span\n        className={cleanClassName(\n          `${styles['tag-content']} ${styles[`size-${size}`]} ${\n            onClose && styles.close\n          }`,\n        )}\n      >\n        {children}\n      </span>\n      {onClose && (\n        <Button\n          size=\"small3x\"\n          className={`${styles['close-button']} ${styles[`close-${size}`]}`}\n          theme=\"bluish-gray700/0\"\n          shape=\"pill\"\n          onClick={(e) => {\n            onClose?.(e);\n            setDisplay(false);\n          }}\n          icon={<X size=\"13px\" className={styles['close-icon']} />}\n        />\n      )}\n    </div>\n  ) : null;\n};\n"],"names":["Tag","color","size","width","className","children","onClose","onClick","display","setDisplay","useState","style","useMemo","jsxs","cleanClassName","styles","jsx","Button","e","X"],"mappings":"siDAuBOA,EAAA,CAAA,CAAa,MAAAC,EAAA,UACV,KAAAC,EAAA,KACD,MAAAC,EACP,UAAAC,EACA,SAAAC,EACA,QAAAC,EAAA,OACU,QAAAC,CAEZ,IAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAAC,EAAA,SAAA,EAAA,EACAC,EAAAC,EAAAA,QAAA,KAAA,CAAA,MAAAT,CAAA,GAAA,CAAAA,CAAA,CAAA,EAEA,OAAAK,EAAAK,EAAA,KACE,MAAC,CAAA,UAAAC,EACY,GAAAC,EAAA,eAAA,CAAA,IAAAA,EAAAd,EAAA,WAAA,IAAA,GAAA,CAAA,CAAA,IAAAM,GAAAQ,EAAA,SAAA,IAAAX,CAAA,EAGI,EACf,MAAAO,EACA,QAAA,IAAAJ,GAAA,YAAAA,IACyB,SAAA,CAEzBS,EAAA,IAAA,OAAC,CAAA,UAAAF,EACY,GAAAC,EAAA,aAAA,CAAA,IAAAA,EAAA,QAAAb,CAAA,EAAA,CAAA,IAAAI,GAAAS,EAAA,KAAA,EAGT,EACF,SAAAV,CAEC,CAAA,EACHC,GAAAU,EAAA,IAEEC,EAAC,CAAA,KAAA,UACM,UAAA,GAAAF,EAAA,cAAA,CAAA,IAAAA,EAAA,SAAAb,CAAA,EAAA,CAAA,GAC0D,MAAA,mBACzD,MAAA,OACA,QAAAgB,GAAA,CAEJZ,GAAA,MAAAA,EAAAY,GACAT,EAAA,EAAA,CAAgB,EAClB,KAAAO,EAAAA,IAAAG,EAAA,CAAA,KAAA,OAAA,UAAAJ,EAAA,YAAA,EAAA,CACsD,CAAA,CACxD,CAAA,CAAA,EAAA,IAIR"}